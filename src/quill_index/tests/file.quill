pub enum Either[T, U] = Left { value: T } | Right { value: U }

pub data Unit {}

pub def create_either[T]: T -> Either[T, Unit] {
    create_either t = Either::Left { value = t },
    create_either a = aaaa,
}

def fmap[F[_], A, B]: (A -> B) -> F[A] -> F[B] {
    fmap fn = \a -> b
}

enum Container[C[_], T, U] = Units { container: C[Unit] } | Eithers { container: C[Either[T, U]] }
