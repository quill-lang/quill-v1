pub data True {}
pub data False {}
pub enum Bool = True | False

pub data Some[T] { value: T }
pub data None {}
pub enum Option[T] = Some[T] | None

pub def id[F[_]]: F[Bool] -> F[Bool] {
    id x = x
}

// More higher-kinded test cases will be inserted here, once traits are done.
// After all, we can't operate generically over types if we have no typeclasses!
